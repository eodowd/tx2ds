import xml.etree.ElementTree as ET
from webui import WebUI
import os
import xml.dom.minidom
from flask import Flask, render_template,flash, request, redirect
from werkzeug.utils import secure_filename
app = Flask(__name__)
ui = WebUI(app)


UPLOAD_FOLDER = ''
ALLOWED_EXTENSIONS = {'xml','txprog'}
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        if 'file' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['file']
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            tree = ET.parse(file.filename)

            header = """
<?xml version="1.0" encoding="UTF-8"?>
<!--FILE GENERATED BY TX2DS.EXE-->
<!--Eoin O'Dowd 2022-->
    <DecentSampler>
        <ui bgImage="background.png" width="812" height="375" layoutMode="relative" bgMode="top_left">
            <tab name="main">
                <labeled-knob x="560" y="0" label="Tone" type="float" minValue="60" maxValue="22000" textColor="FF000000" value="22000.0" uid="y8AA4uuURh3">
                    <binding type="effect" level="instrument" position="0" parameter="FX_FILTER_FREQUENCY"/>
                </labeled-knob>
                <labeled-knob x="655" y="0" label="Reverb" type="percent" minValue="0" maxValue="100" textColor="FF000000" value="50.0" uid="lKv29kggDro">
                <binding type="effect" level="instrument" position="1" parameter="FX_REVERB_WET_LEVEL" factor="0.01"/>
                </labeled-knob>
            </tab>
        </ui>
              
                        """
            groups = """
        <groups attack="0.000" decay="25" sustain="1.0" release="0.430" volume="-3dB">
            <group>
                """
            footer="""
            </group>
        </groups>
    <effects>
        <effect type="lowpass_4pl" frequency="22000.0"/>
        <effect type="reverb" wetLevel="0.5"/>
    </effects>
    </DecentSampler>
                """

            root = tree.getroot()
            ns = {'tx': 'http://www.tx16wx.com/3.0/program'}
            for i in range(1, 300):
                #for program in root.iterfind('tx:program[' + str(i) + ']', ns):
                    for name in root.iterfind('tx:group[' + str(i) + ']', ns):
                        f = open('instrument.dspreset', 'w')
                        f.write(header+'\n'+groups)
                        for i in range(1, 300):
                            for path in root.iterfind('tx:wave[' + str(i) + ']', ns):
                                elsmen = list(path.attrib.values())
                            for names in name.iterfind('tx:region[' + str(i) + ']', ns):
                                els = list(names[0].attrib.values())
                                sam = ET.Element('sample')
                                sam.set('loNote', str(els[1]))
                                sam.set('hiNote', str(els[3]))
                                sam.set('rootNote', str(els[1]))
                                sam.set('hiVel', str(els[0]))
                                sam.set('loVel', str(els[2]))
                                sam.set('path',  str(elsmen[0]))



                                herpy = ET.tostring(sam).decode("utf-8")
                                f.write(herpy+'\n')


                        f.write(footer+'\n')



                    f.close()
        return render_template("info.html")

    return render_template("index.html")


@app.errorhandler(404)
def page_not_found(e):
    return render_template('index.html'), 404

if __name__ == '__main__':
    ui.run()